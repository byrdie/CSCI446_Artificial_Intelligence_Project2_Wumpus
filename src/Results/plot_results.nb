(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     90639,       1740]
NotebookOptionsPosition[     89054,       1688]
NotebookOutlinePosition[     89393,       1703]
CellTagsIndexPosition[     89350,       1700]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"logicFile", " ", "=", " ", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], ",", 
     "\"\<Logic_results.txt\>\""}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"reactFile", " ", "=", " ", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], ",", 
     "\"\<Reactive_results.txt\>\""}], "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.686276846997397*^9, 3.6862769324898987`*^9}, {
  3.6862882466729116`*^9, 3.686288247047686*^9}}],

Cell[BoxData["\<\"/home/byrdie/School/Classes/CSCI446_Artificial_Intelligence/\
CSCI446_Artificial_Intelligence_Project2_Wumpus/src/Results/Logic_results.txt\
\"\>"], "Output",
 CellChangeTimes->{
  3.686276967891865*^9, 3.686280950163349*^9, 3.6862826439489717`*^9, 
   3.686282871564302*^9, 3.6862829964649982`*^9, 3.686283145273012*^9, 
   3.686283357952883*^9, 3.686283421612122*^9, 3.6862836017176647`*^9, 
   3.686283645092074*^9, {3.6862838074980307`*^9, 3.686283830733856*^9}, 
   3.686283861086113*^9, {3.6862839081146603`*^9, 3.68628393118087*^9}, 
   3.686284182928804*^9, 3.68628433710972*^9, 3.6862843928327103`*^9, 
   3.6862844459210463`*^9, 3.6862844830079803`*^9, {3.686284607354639*^9, 
   3.6862846339920177`*^9}, {3.6862847080056543`*^9, 
   3.6862847274685926`*^9}, {3.686284861508335*^9, 3.686284886921708*^9}, 
   3.686285953014723*^9, 3.6862863136060877`*^9, 3.686288203833934*^9, {
   3.686288235325631*^9, 3.686288274683261*^9}, 3.686288476264366*^9, {
   3.686309073396134*^9, 3.6863090966044683`*^9}, 3.686309171857501*^9, 
   3.686309204983966*^9, 3.686309309985393*^9, 3.6863093536473703`*^9, 
   3.686309544959491*^9, 3.686309598860813*^9, 3.686325408585981*^9, {
   3.68632566088386*^9, 3.6863256829242277`*^9}, 3.686325880072977*^9, 
   3.686325952002931*^9, 3.6863262415529003`*^9, 3.686326279263528*^9, 
   3.68632695897145*^9, 3.68632699435679*^9, 3.6863270314498158`*^9, {
   3.686327103841569*^9, 3.686327130614686*^9}, {3.686327170883114*^9, 
   3.68632719700626*^9}, 3.686327273614901*^9, 3.686327426612048*^9, 
   3.6863275817559853`*^9}],

Cell[BoxData["\<\"/home/byrdie/School/Classes/CSCI446_Artificial_Intelligence/\
CSCI446_Artificial_Intelligence_Project2_Wumpus/src/Results/Reactive_results.\
txt\"\>"], "Output",
 CellChangeTimes->{
  3.686276967891865*^9, 3.686280950163349*^9, 3.6862826439489717`*^9, 
   3.686282871564302*^9, 3.6862829964649982`*^9, 3.686283145273012*^9, 
   3.686283357952883*^9, 3.686283421612122*^9, 3.6862836017176647`*^9, 
   3.686283645092074*^9, {3.6862838074980307`*^9, 3.686283830733856*^9}, 
   3.686283861086113*^9, {3.6862839081146603`*^9, 3.68628393118087*^9}, 
   3.686284182928804*^9, 3.68628433710972*^9, 3.6862843928327103`*^9, 
   3.6862844459210463`*^9, 3.6862844830079803`*^9, {3.686284607354639*^9, 
   3.6862846339920177`*^9}, {3.6862847080056543`*^9, 
   3.6862847274685926`*^9}, {3.686284861508335*^9, 3.686284886921708*^9}, 
   3.686285953014723*^9, 3.6862863136060877`*^9, 3.686288203833934*^9, {
   3.686288235325631*^9, 3.686288274683261*^9}, 3.686288476264366*^9, {
   3.686309073396134*^9, 3.6863090966044683`*^9}, 3.686309171857501*^9, 
   3.686309204983966*^9, 3.686309309985393*^9, 3.6863093536473703`*^9, 
   3.686309544959491*^9, 3.686309598860813*^9, 3.686325408585981*^9, {
   3.68632566088386*^9, 3.6863256829242277`*^9}, 3.686325880072977*^9, 
   3.686325952002931*^9, 3.6863262415529003`*^9, 3.686326279263528*^9, 
   3.68632695897145*^9, 3.68632699435679*^9, 3.6863270314498158`*^9, {
   3.686327103841569*^9, 3.686327130614686*^9}, {3.686327170883114*^9, 
   3.68632719700626*^9}, 3.686327273614901*^9, 3.686327426612048*^9, 
   3.6863275817949133`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dat", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{"logicFile", ",", "Number", ",", 
     RowBox[{"RecordLists", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.686276311468583*^9, 3.686276311479574*^9}, {
  3.686276940361624*^9, 3.686276945741803*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dats", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{"reactFile", ",", "Number", ",", 
     RowBox[{"RecordLists", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.686277707083248*^9, 3.6862777079124928`*^9}, {
  3.686288056951923*^9, 3.686288067143003*^9}, {3.686327021732836*^9, 
  3.686327021787889*^9}, {3.68632742321378*^9, 3.68632742369685*^9}, {
  3.686327534410275*^9, 3.6863275344495573`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPointPlot3D", "[", 
  RowBox[{"dat", ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "Large", "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPointPlot3D", "[", 
  RowBox[{"datr", ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "Large", "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.686277871620158*^9, 3.686277883919524*^9}, 
   3.686279019954947*^9, {3.6862880820015793`*^9, 3.686288087172846*^9}}],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[Large], 
   Point3DBox[CompressedData["
1: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
y/8G6EvV/w==
    "]]},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  FaceGridsStyle->Automatic,
  ImageSize->{618., 475.},
  PlotRange->{{5., 35.}, {0., 40.}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.21166645725735286`, -3.276378987564844, 0.8188638719077286},
  ViewVertical->{-0.1677551911500546, -0.39558673192900673`, 
   2.257445089813837}]], "Output",
 CellChangeTimes->{
  3.686277884761734*^9, 3.686279020932132*^9, 3.6862809512149076`*^9, 
   3.6862826444464273`*^9, 3.686282872084331*^9, 3.686283145566057*^9, 
   3.68628335828334*^9, 3.686283422097987*^9, 3.68628360217365*^9, 
   3.686283645649427*^9, {3.686283807876857*^9, 3.68628383113654*^9}, 
   3.686283861633494*^9, {3.686283909916202*^9, 3.686283933091464*^9}, 
   3.686284183426052*^9, 3.686284337692543*^9, 3.68628439330884*^9, 
   3.686284446468286*^9, 3.686284483576247*^9, {3.6862846079149227`*^9, 
   3.68628463444728*^9}, {3.686284708213306*^9, 3.686284727897532*^9}, {
   3.686284861722288*^9, 3.6862848871396637`*^9}, 3.6862859538909492`*^9, 
   3.686286314118719*^9, 3.686288088546596*^9, 3.686288204072124*^9, {
   3.686288235900955*^9, 3.6862882749250298`*^9}, 3.6862884766206837`*^9, {
   3.686309080502549*^9, 3.686309097005039*^9}, 3.686309172208108*^9, 
   3.68630920531136*^9, 3.686309310826878*^9, 3.686309355850874*^9, 
   3.686309545289401*^9, 3.686309599266769*^9, 3.686325408927182*^9, {
   3.686325661143965*^9, 3.6863256832168207`*^9}, 3.686325880618959*^9, 
   3.686325952180586*^9, 3.6863262417627687`*^9, 3.68632627947469*^9, 
   3.686326959160684*^9, 3.686326994619596*^9, 3.686327031825253*^9, {
   3.686327104168851*^9, 3.686327131193432*^9}, {3.686327171555503*^9, 
   3.686327197219109*^9}, 3.686327273810852*^9, 3.6863274269149*^9, 
   3.686327582146448*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPointPlot3D","arrayerr",
   "\"\\!\\(\\*RowBox[{\\\"datr\\\"}]\\) must be a valid array or a list of \
valid arrays.\"",2,6,1,19162229033080663241,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6863275822916203`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPointPlot3D","arrayerr",
   "\"\\!\\(\\*RowBox[{\\\"datr\\\"}]\\) must be a valid array or a list of \
valid arrays.\"",2,6,2,19162229033080663241,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.686327582373109*^9}],

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", 
  RowBox[{"datr", ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "Large", "]"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.686277884761734*^9, 3.686279020932132*^9, 3.6862809512149076`*^9, 
   3.6862826444464273`*^9, 3.686282872084331*^9, 3.686283145566057*^9, 
   3.68628335828334*^9, 3.686283422097987*^9, 3.68628360217365*^9, 
   3.686283645649427*^9, {3.686283807876857*^9, 3.68628383113654*^9}, 
   3.686283861633494*^9, {3.686283909916202*^9, 3.686283933091464*^9}, 
   3.686284183426052*^9, 3.686284337692543*^9, 3.68628439330884*^9, 
   3.686284446468286*^9, 3.686284483576247*^9, {3.6862846079149227`*^9, 
   3.68628463444728*^9}, {3.686284708213306*^9, 3.686284727897532*^9}, {
   3.686284861722288*^9, 3.6862848871396637`*^9}, 3.6862859538909492`*^9, 
   3.686286314118719*^9, 3.686288088546596*^9, 3.686288204072124*^9, {
   3.686288235900955*^9, 3.6862882749250298`*^9}, 3.6862884766206837`*^9, {
   3.686309080502549*^9, 3.686309097005039*^9}, 3.686309172208108*^9, 
   3.68630920531136*^9, 3.686309310826878*^9, 3.686309355850874*^9, 
   3.686309545289401*^9, 3.686309599266769*^9, 3.686325408927182*^9, {
   3.686325661143965*^9, 3.6863256832168207`*^9}, 3.686325880618959*^9, 
   3.686325952180586*^9, 3.6863262417627687`*^9, 3.68632627947469*^9, 
   3.686326959160684*^9, 3.686326994619596*^9, 3.686327031825253*^9, {
   3.686327104168851*^9, 3.686327131193432*^9}, {3.686327171555503*^9, 
   3.686327197219109*^9}, 3.686327273810852*^9, 3.6863274269149*^9, 
   3.686327582377503*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"numobs", " ", "=", " ", "40"}], "\[IndentingNewLine]", 
 RowBox[{"numsteps", " ", "=", " ", "7"}], "\[IndentingNewLine]", 
 RowBox[{"stepsize", "=", "5"}]}], "Input",
 CellChangeTimes->{{3.686282750382394*^9, 3.6862827979078913`*^9}, {
  3.6862837958644342`*^9, 3.686283795956279*^9}, {3.6862838271933317`*^9, 
  3.68628385449736*^9}, {3.68628594981636*^9, 3.6862859498555326`*^9}, {
  3.686288473558359*^9, 3.68628847365569*^9}, {3.686309093609845*^9, 
  3.686309093664547*^9}, {3.6863091682484417`*^9, 3.686309168867654*^9}, {
  3.686309201696355*^9, 3.686309202866785*^9}, {3.686309305899808*^9, 
  3.686309307080879*^9}}],

Cell[BoxData["40"], "Output",
 CellChangeTimes->{
  3.686282800371442*^9, 3.6862828721981297`*^9, 3.686283145751609*^9, 
   3.6862833584808397`*^9, 3.6862834223380938`*^9, 3.686283602399864*^9, 
   3.686283645940089*^9, {3.6862838080885887`*^9, 3.6862838312420053`*^9}, 
   3.6862838617456512`*^9, {3.6862839100572844`*^9, 3.686283933495967*^9}, 
   3.68628418363371*^9, 3.686284337856982*^9, 3.6862843935132437`*^9, 
   3.686284446672347*^9, 3.686284483786892*^9, {3.686284608122923*^9, 
   3.686284634659513*^9}, {3.6862847084127197`*^9, 3.686284728035534*^9}, {
   3.686284861976289*^9, 3.686284887345579*^9}, 3.686285954052487*^9, 
   3.6862863143362007`*^9, 3.686288204498815*^9, {3.686288237178533*^9, 
   3.686288275474552*^9}, 3.6862884769622183`*^9, {3.686309081296184*^9, 
   3.6863090973049183`*^9}, 3.6863091724877453`*^9, 3.686309205562294*^9, 
   3.686309311181079*^9, 3.686309365234026*^9, 3.686309545507605*^9, 
   3.686309599459179*^9, 3.686325409220145*^9, {3.6863256613158083`*^9, 
   3.68632568359245*^9}, 3.686325880840723*^9, 3.686325952449274*^9, 
   3.6863262419239883`*^9, 3.686326279753446*^9, 3.686326959429626*^9, 
   3.686326994817677*^9, 3.6863270321264277`*^9, {3.68632710460021*^9, 
   3.686327131696294*^9}, {3.686327172058588*^9, 3.68632719768396*^9}, 
   3.686327274158225*^9, 3.6863274272163067`*^9, 3.686327582441964*^9}],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{
  3.686282800371442*^9, 3.6862828721981297`*^9, 3.686283145751609*^9, 
   3.6862833584808397`*^9, 3.6862834223380938`*^9, 3.686283602399864*^9, 
   3.686283645940089*^9, {3.6862838080885887`*^9, 3.6862838312420053`*^9}, 
   3.6862838617456512`*^9, {3.6862839100572844`*^9, 3.686283933495967*^9}, 
   3.68628418363371*^9, 3.686284337856982*^9, 3.6862843935132437`*^9, 
   3.686284446672347*^9, 3.686284483786892*^9, {3.686284608122923*^9, 
   3.686284634659513*^9}, {3.6862847084127197`*^9, 3.686284728035534*^9}, {
   3.686284861976289*^9, 3.686284887345579*^9}, 3.686285954052487*^9, 
   3.6862863143362007`*^9, 3.686288204498815*^9, {3.686288237178533*^9, 
   3.686288275474552*^9}, 3.6862884769622183`*^9, {3.686309081296184*^9, 
   3.6863090973049183`*^9}, 3.6863091724877453`*^9, 3.686309205562294*^9, 
   3.686309311181079*^9, 3.686309365234026*^9, 3.686309545507605*^9, 
   3.686309599459179*^9, 3.686325409220145*^9, {3.6863256613158083`*^9, 
   3.68632568359245*^9}, 3.686325880840723*^9, 3.686325952449274*^9, 
   3.6863262419239883`*^9, 3.686326279753446*^9, 3.686326959429626*^9, 
   3.686326994817677*^9, 3.6863270321264277`*^9, {3.68632710460021*^9, 
   3.686327131696294*^9}, {3.686327172058588*^9, 3.68632719768396*^9}, 
   3.686327274158225*^9, 3.6863274272163067`*^9, 3.68632758244403*^9}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{
  3.686282800371442*^9, 3.6862828721981297`*^9, 3.686283145751609*^9, 
   3.6862833584808397`*^9, 3.6862834223380938`*^9, 3.686283602399864*^9, 
   3.686283645940089*^9, {3.6862838080885887`*^9, 3.6862838312420053`*^9}, 
   3.6862838617456512`*^9, {3.6862839100572844`*^9, 3.686283933495967*^9}, 
   3.68628418363371*^9, 3.686284337856982*^9, 3.6862843935132437`*^9, 
   3.686284446672347*^9, 3.686284483786892*^9, {3.686284608122923*^9, 
   3.686284634659513*^9}, {3.6862847084127197`*^9, 3.686284728035534*^9}, {
   3.686284861976289*^9, 3.686284887345579*^9}, 3.686285954052487*^9, 
   3.6862863143362007`*^9, 3.686288204498815*^9, {3.686288237178533*^9, 
   3.686288275474552*^9}, 3.6862884769622183`*^9, {3.686309081296184*^9, 
   3.6863090973049183`*^9}, 3.6863091724877453`*^9, 3.686309205562294*^9, 
   3.686309311181079*^9, 3.686309365234026*^9, 3.686309545507605*^9, 
   3.686309599459179*^9, 3.686325409220145*^9, {3.6863256613158083`*^9, 
   3.68632568359245*^9}, 3.686325880840723*^9, 3.686325952449274*^9, 
   3.6863262419239883`*^9, 3.686326279753446*^9, 3.686326959429626*^9, 
   3.686326994817677*^9, 3.6863270321264277`*^9, {3.68632710460021*^9, 
   3.686327131696294*^9}, {3.686327172058588*^9, 3.68632719768396*^9}, 
   3.686327274158225*^9, 3.6863274272163067`*^9, 3.686327582448894*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.686278639655706*^9, 3.6862786675540047`*^9}, {
  3.6862792122657337`*^9, 3.686279218822056*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"orgdata", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"numsteps", ",", "numobs"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"orgdatar", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"numsteps", ",", "numobs"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ndata", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "numsteps"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ndatar", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "numsteps"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.686279230237905*^9, 3.6862792357202463`*^9}, {
   3.68627935804216*^9, 3.686279360402047*^9}, {3.68627964000356*^9, 
   3.686279650969365*^9}, {3.686279924287546*^9, 3.686279987157723*^9}, {
   3.686280032650799*^9, 3.68628003326943*^9}, {3.686280650421791*^9, 
   3.6862806560799713`*^9}, 3.686280916991126*^9, {3.68628097687077*^9, 
   3.686280979862804*^9}, {3.686281846308563*^9, 3.686281849544869*^9}, {
   3.6862818907199917`*^9, 3.686281892368331*^9}, {3.6862820050691357`*^9, 
   3.686282006549672*^9}, {3.686282056550757*^9, 3.6862820571073837`*^9}, {
   3.686282638225947*^9, 3.686282640263933*^9}, {3.686282891031123*^9, 
   3.686282897143387*^9}, {3.6862829903986273`*^9, 3.686283016802223*^9}, {
   3.6862839010373487`*^9, 3.6862839045611153`*^9}, {3.6862881054873962`*^9, 
   3.686288110387643*^9}, {3.686325475608265*^9, 3.6863255098656073`*^9}}],

Cell[BoxData[{
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
   RowBox[{"i", "<=", "numsteps"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", " ", "=", " ", "1"}], ",", " ", 
     RowBox[{"j", " ", "<=", " ", "numobs"}], ",", " ", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
       RowBox[{"k", " ", "<=", " ", 
        RowBox[{"Length", "[", "dat", "]"}]}], ",", " ", 
       RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"dat", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "1"}], "]"}], "]"}], "\[Equal]", 
            RowBox[{"(", 
             RowBox[{"i", "*", "stepsize"}], ")"}]}], "\[And]", 
           RowBox[{
            RowBox[{"dat", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "2"}], "]"}], "]"}], "\[Equal]", "j"}]}], ",", 
          RowBox[{
           RowBox[{"orgdata", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j", ",", "0"}], "]"}], "]"}], "=", 
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{"orgdata", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j", ",", "0"}], "]"}], "]"}], ",", 
             RowBox[{"dat", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", "3"}], "]"}], "]"}]}], "]"}]}]}], "]"}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"dat", "[", 
            RowBox[{"[", 
             RowBox[{"k", ",", "1"}], "]"}], "]"}], "\[Equal]", 
           RowBox[{"(", 
            RowBox[{"i", "*", "stepsize"}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"Ndata", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "0"}], "]"}], "]"}], "=", 
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{"Ndata", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "0"}], "]"}], "]"}], ",", 
             RowBox[{"dat", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", "3"}], "]"}], "]"}]}], "]"}]}]}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
   RowBox[{"i", "<=", "numsteps"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", " ", "=", " ", "1"}], ",", " ", 
     RowBox[{"j", " ", "<=", " ", "numobs"}], ",", " ", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
       RowBox[{"k", " ", "<=", " ", 
        RowBox[{"Length", "[", "datr", "]"}]}], ",", " ", 
       RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"datr", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "1"}], "]"}], "]"}], "\[Equal]", 
            RowBox[{"(", 
             RowBox[{"i", "*", "stepsize"}], ")"}]}], "\[And]", 
           RowBox[{
            RowBox[{"datr", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "2"}], "]"}], "]"}], "\[Equal]", "j"}]}], ",", 
          RowBox[{
           RowBox[{"orgdatar", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j", ",", "0"}], "]"}], "]"}], "=", 
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{"orgdatar", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j", ",", "0"}], "]"}], "]"}], ",", 
             RowBox[{"datr", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", "3"}], "]"}], "]"}]}], "]"}]}]}], "]"}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"datr", "[", 
            RowBox[{"[", 
             RowBox[{"k", ",", "1"}], "]"}], "]"}], "\[Equal]", 
           RowBox[{"(", 
            RowBox[{"i", "*", "stepsize"}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"Ndatar", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "0"}], "]"}], "]"}], "=", 
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{"Ndatar", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "0"}], "]"}], "]"}], ",", 
             RowBox[{"datr", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", "3"}], "]"}], "]"}]}], "]"}]}]}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.686278105286731*^9, 3.686278162251013*^9}, {
   3.686278196193383*^9, 3.686278198620388*^9}, {3.686278509195541*^9, 
   3.686278539778658*^9}, {3.686278677087413*^9, 3.6862786927641287`*^9}, {
   3.68627883167848*^9, 3.68627885974758*^9}, {3.686278951618524*^9, 
   3.6862789709883547`*^9}, {3.686279097711879*^9, 3.686279213775526*^9}, 
   3.6862792481059217`*^9, 3.6862793894732857`*^9, {3.686279502075582*^9, 
   3.686279560454114*^9}, {3.686279597285616*^9, 3.686279626422138*^9}, {
   3.686279674542698*^9, 3.686279677030902*^9}, {3.686279730191986*^9, 
   3.686279811574234*^9}, {3.686279862908849*^9, 3.686279863182867*^9}, {
   3.686280813977221*^9, 3.686280859582323*^9}, {3.686280891323904*^9, 
   3.686280895518758*^9}, {3.68628093058713*^9, 3.6862809312554903`*^9}, {
   3.6862811444665956`*^9, 3.686281151405953*^9}, {3.686281489191209*^9, 
   3.686281540839274*^9}, {3.686281835314411*^9, 3.686281835456863*^9}, {
   3.686281870467245*^9, 3.686281887820994*^9}, {3.686281947950288*^9, 
   3.6862819485202723`*^9}, {3.686281983415513*^9, 3.686281996436596*^9}, {
   3.686282088544177*^9, 3.686282138854937*^9}, {3.686282206359976*^9, 
   3.6862822843721247`*^9}, {3.686282341696487*^9, 3.6862823459270287`*^9}, {
   3.6862828052238607`*^9, 3.68628286235474*^9}, {3.686283349879218*^9, 
   3.686283350068521*^9}, {3.686283414780974*^9, 3.686283415124277*^9}, {
   3.686283592855631*^9, 3.686283597725412*^9}, {3.686288126377709*^9, 
   3.686288148114832*^9}, 3.686288264692923*^9, {3.686325515628778*^9, 
   3.6863255510567493`*^9}, 3.6863256721840687`*^9, {3.6863257557525063`*^9, 
   3.686325758527684*^9}, {3.686325874964994*^9, 3.686325877575039*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.686325774570087*^9, 3.686325780163322*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.686282725987866*^9, 3.686282727221991*^9}, {
   3.686282883671012*^9, 3.686282885048217*^9}, 3.6862829386238728`*^9, {
   3.6862830792982187`*^9, 3.686283087677144*^9}, 3.6862834292883387`*^9, {
   3.686283923158907*^9, 3.686283928103388*^9}, {3.6862840954908257`*^9, 
   3.686284101898102*^9}, {3.6862845744544888`*^9, 3.686284587700321*^9}, {
   3.68628816035823*^9, 3.6862881639921837`*^9}, {3.686325560305347*^9, 
   3.6863255729849787`*^9}, {3.686326227354684*^9, 3.686326257098949*^9}, {
   3.686327059172905*^9, 3.686327071594715*^9}, 3.686327185578141*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
   RowBox[{"i", "<=", "numsteps"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", " ", "=", " ", "1"}], ",", " ", 
     RowBox[{"j", " ", "<=", " ", "numobs"}], ",", " ", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", " ", 
     RowBox[{"test", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"test", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"i", "*", "stepsize"}], ",", "j", ",", 
          RowBox[{"Mean", "[", 
           RowBox[{"orgdata", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j", ",", "0"}], "]"}], "]"}], "]"}]}], 
         "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.6862827019773817`*^9, 3.686282718316231*^9}, {
   3.686282953279282*^9, 3.686282981652442*^9}, {3.6862830256294823`*^9, 
   3.686283058360765*^9}, {3.6862831365864573`*^9, 3.68628314217171*^9}, {
   3.686283324988316*^9, 3.6862833251787777`*^9}, {3.6862836400680304`*^9, 
   3.68628364097113*^9}, {3.6862841738006372`*^9, 3.6862841778355513`*^9}, {
   3.6862842794581413`*^9, 3.686284279581902*^9}, {3.6862843130975647`*^9, 
   3.68628432522399*^9}, {3.6862843879738903`*^9, 3.6862843888352613`*^9}, {
   3.6862844321900463`*^9, 3.686284432325036*^9}, {3.686284466984366*^9, 
   3.6862844671593227`*^9}, {3.686284592433177*^9, 3.6862846316124973`*^9}, {
   3.686284850352942*^9, 3.6862848842082443`*^9}, {3.68628629621349*^9, 
   3.686286297026495*^9}, {3.686288175542843*^9, 3.686288181250465*^9}, {
   3.6863255763770227`*^9, 3.686325627444846*^9}, {3.686325922504928*^9, 
   3.686325970881628*^9}, {3.686326233579832*^9, 3.686326275730336*^9}, {
   3.68632719077451*^9, 3.686327192364443*^9}, {3.6863272657640877`*^9, 
   3.6863272697010508`*^9}, 3.686327407308337*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{"test", ",", " ", 
   RowBox[{"Mesh", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Size of Board\>\"", ",", "\"\<Number of Obstacles\>\"", ",", "  ", 
      "\"\<Score\>\""}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.686326979060296*^9, 3.6863269805579844`*^9}, {
  3.6863272809585*^9, 3.686327292555772*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGDQBWJmBhgQcYDQH+y/2Jz/bBPe7YAqzuBw9gwQ5GSiiXM4
HPV7c8TvTymauIDD6lVAEJWIJg6lG9QPQPgqcHvBlATMXpg4A4T+gC7O4SAH
As+a0cQFHEJB4GgVmrgExP06qWjiMlDaB809KhD3dxVC+Xpwd27Pvb0tN7oV
TZwBam8bmjiHg6rnJBXPWejqJRxeLurW23WjBk1cCUpnoYmrQcwXjTmAKm4A
FU+H8k3g7oS4qhZNHBqeJxrQxDkg9IZKNHFoeNY2o4lLQMLnVRWauAKEDqhH
E9eAqJ+Ebq8exHzd5gOo4mYQ9V4JUL4lqr8MmtHEof6yaEcT54CY/7QQTVwE
Yr5S4wFUcQkobYumXsXBGASSS9HEofEwbxqaOcYQe5eim28DsVcrHMq3g7sT
TCVkHkAVl4CGfweaemh4ropBEzeHqA/9uh9V3BFCX6iDmN8A5TPoQNU3oYlb
Q8T/9qCJu0DoE10HALDIrWg=
   "], {
    {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[GrayLevel[0.2]], 
     Specularity[
      GrayLevel[1], 3], 
     StyleBox[
      GraphicsGroup3DBox[
       Polygon3DBox[{{13, 14, 7}, {6, 2, 1}, {11, 5, 10}, {7, 2, 6}, {3, 7, 
        8}, {14, 13, 20}, {17, 12, 11}, {6, 13, 7}, {3, 8, 4}, {9, 4, 8}, {14,
         8, 7}, {5, 4, 9}, {3, 2, 7}, {9, 10, 5}, {9, 8, 15}, {15, 8, 14}, {9,
         15, 16}, {21, 29, 30}, {25, 16, 24}, {21, 20, 29}, {14, 21, 15}, {19,
         5, 12}, {14, 20, 21}, {17, 11, 16}, {27, 19, 26}, {9, 16, 10}, {15, 
        22, 23}, {15, 21, 22}, {17, 18, 12}, {15, 23, 16}, {19, 12, 18}, {11, 
        12, 5}, {33, 25, 24}, {21, 30, 22}, {28, 5, 19}, {23, 24, 16}, {10, 
        16, 11}, {16, 25, 17}, {28, 27, 36}, {17, 25, 18}, {26, 34, 35}, {26, 
        18, 25}, {32, 23, 31}, {19, 18, 26}, {30, 31, 22}, {33, 24, 32}, {19, 
        27, 28}, {37, 28, 36}, {30, 38, 31}, {33, 34, 25}, {32, 24, 23}, {32, 
        38, 39}, {34, 26, 25}, {37, 5, 28}, {32, 31, 38}, {37, 44, 42}, {31, 
        23, 22}, {26, 35, 27}, {5, 37, 42}, {32, 39, 33}, {39, 40, 34}, {45, 
        5, 42}, {35, 34, 40}, {36, 27, 35}, {30, 29, 38}, {36, 35, 40}, {40, 
        43, 41}, {36, 40, 41}, {41, 37, 36}, {33, 39, 34}, {41, 43, 44}, {40, 
        39, 43}, {39, 38, 43}, {41, 44, 37}, {42, 44, 45}}]],
      Lighting->"Neutral"]}, {}, {}, {}, {}},
   VertexColors->CompressedData["
1:eJwNkX841HcAxy9kKDFOU7HTrqHhjH7opN6dp0S1woaNaibaPX5nHs9DLBHN
j6nGVUon6/GrH679YBj9uNwlh2On67qR307fu+99Vj15mkm7P17P+9/36/1e
G5MSGmfEYDA8DBgb+OBO6u74QArhohJvKUuC2blBmX++BHobX+2NLQRq1iGB
y10agy/Fy4fMn8DZsvd8EVeP5rjx46vdKHSXmP80VDqIBcasqPUywaaKdmqX
pSHXOZzlL1MjoG2xynuQoIhlW1ctIrjF3tjhq5gE98S6seXhFDKjxje/E0uR
NxLhlfOHBHbdOvcsFwrMKJ7Cxu0+eFbNSfZLJci9ZGRcTLQYZl6bjDs1BuXB
A+udrsjQWbk+36+chn3yZIL0ggb6Aqv5TScHYJNPZQ4lEliut522T9HjHmmP
ZlarwBD57jqoJNhgwSm+3k7waTxzznXpDMLDJsrZYj30psrFYE8dOkjV/Giq
Alkruoa7BFoMbZ1sKXk6glitg2nusR6YbEgOvr5TC+rA4ZO/Nj/FgtO7tceD
HuG0+bPI+kItND2D9QHBI/A+0iNdjh5kWbvYrdpLoyIowUeSOYNn3fxQluUA
gkoy4654EeSZ7hN/VU9joSXNkqFQQtWmSbGUEXgIKhc//pOA3xkQVeAzC6FP
EcUPI0huyMmwd9LjeRthOz5/goxXf1kzt9GwCxx57ek/AyHtFc+i5WCNjvIz
RDo45Jr9PKadhKsJa1ezYz/Us1XVE600jP1MQi08ZtF/c8q2t3MAG9MWz3WY
GfyXpB0emBvDvcazHr4vZOiOMbV1K6PRtN06vylfA1c2i7kicwC6iA7B0dc6
vDnlHWPkPI0oV+u2JFM55IpHV4M6dEiLYcw5OE/BYVlcY35gP94Ox37D36HF
tbK5ytef6bB5PtqCLiYwcaxQiBsITqxs2O7PNfixV9e2pqrhHXjDL2yNDgXX
eo/x9o4jue+Maq9nL5LOSOb/cdOiRLM9SchVQR5/ZstDqhshdJdzWpse1rd9
HBbf10F76RUvzEOBVdk7u/pydFDHClQWhh+6vq6x2tBIcF743ffHeglUnILI
9FqCQ11b5Hf6xtHEuZ8Xul+PCE7EJ3k5FHrWRGJ30yCkRaIMpkaKAl5lQHmJ
Ag+suTnbRmmEVpQmpHN02Ceif5AsoxEdEFJWU0NAef84YywhCPu81vycgMAl
doVP9p4RdNcxGpVXCcLdQx1/MfS4vsRD6PiKQl7NR2GyaQoLCXadPOMhcO9y
3FY+e4gqv9ZM2T0CrzKb8i8Me9WJj36b7vY3lGZrcv6TE1yZ3+NpeouAffHN
nZf7J5FYv8AXFtMo3F95+MhaPT58fFmtFBNcEhidL3+gxWr1xbulLTp8WUWp
Uy4Q7Kh7HPFe4QR8hdH/hvCn4W5zc+fWVj1+az2blPj7FDpfNLZluWuQHeV/
++2UHv8Dj9ofog==
    "],
   VertexNormals->CompressedData["
1:eJwNww041HcAB3DdTZ5tsj3ZyvDo5RRLVMOlc/NFdb0XSig9lIkxMedtTnm5
3pBw2u1WZyWHslF0Vl26H52TdKlw8lJN4Rzn7r9kSW/W53k+C/bF+oXTjIyM
HD+mfyy+3+oRviEMkzPvPJ6cpsCj79psuT8QzKrsAOtJitQnrE3mp1ZAFLQq
p68yA8tsY5MElhoiCFlAcRjDEL9lZUtYGWgLPhgVOtxOGN4K070CA3zvCUvG
3idg+y3xZzTjIfKwOuBV/XwtgpWmymI+F1cWrxX1UAOk37jsrbhFi+FE6fy2
z+vB4V9zmMrQkJ2z0pqs4jQkbzN3Ys0Xcrhdvx0aGNdEflhUtPCckAJlwVbM
9stAQhvVUm6jJqtjwmSDLgao2y17Nfw0xG6bGf8T/RE5kPamQNenB8eJy5Ob
J+PrmxHtL0UjpDDuMofvNICri3eVh60oRrh2ZcWeV4Nw6uAHpthrSW/Q1d5G
7lnUb4yoDorSgB9i92FPp4Yk5DeOmKwoQvf95Z3lKgonx2tu5VbL4IzWX21q
JVDZvouoSWqAtPWpP09G4QaH8dcD/yLQX9wc313XRS45jW7rGtGjyoGsYwkL
MIuufPdE0kN4CxrM63z0KLb3d5wbmwfzwoV2Qx7DRFlGNzOZGsK5HNm5UK9i
HP2mRUNl9xJBv88xr6/0EFl0SCWRF1DvrFLdNe3AAbdvt4pyDWTVlKz0w5YC
PKJHBYxFGWC1LlqQXNtOBOlHQsumZLhR1Hzi0ox+TJR4Th+u1UHXW7yjUfY7
2Dl2J/qKtDDUBk5M8wYxHbF8+4dUAdKseUup9Xq8/3Mg5kxjD3lmXf08rOY3
TGyMtuQfHsN40lZlafZjYrbB2jt/Xx3WJ9y2shi4h75Inx1qSwpNLSWRZman
4fPC/42DmMKk8XXaao2CeMdUGNOZh+Da4DXDhDGEyHB7ppCmJSkWQSwT6Rkw
Te+Uuh2qgTy0wjxqjCL/nWdaMhYfgbApsaz6TSe2FzK1+1gGXPh0/hb3tpOI
Sa+MuKfrwOmhfy9ORBrgae8s8PWMh3Py5Z9lV3RgP3mQ2k/rJ77uHnbfzcmH
q1PXHI9PFLChrYm/K6GIf8y1YybsTAiq9niEhD5DHLvhH8eeUVRGEpFSWoKz
15aYN3/fgp3yL9Xx0RSSw1JV0cGZWN2lyJrLVpCXqbauYecpIipBQC73OADa
63Lb5/B7vUKs2zaK6hs8v8I1F1GaRXYalBSELWrbzSFyuNtl9nBYB/H3prnL
dzfXEbuRWxWSpxQZ8XVUSoV/gNPtErVLfIc83+uS+EsQBf08V293UR4kD/cz
Ci9TWMJ/anTIsxEWg4/z+91LUJTebSjnqtHbkZNMW2SAW6zVef8dBUjfWjWu
Ok5BOvvUypVyJZYF56kHF6WAs4mVy1xFoXbTPFORkQpx9x86NsuywCyIWa9I
78aPL+W0pSf1yKN1cndPncL/j2kocQ==
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"Size of Board\"", TraditionalForm], 
    FormBox["\"Number of Obstacles\"", TraditionalForm], 
    FormBox["\"Score\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{5., 35.}, {1., 40.}, {-1447.5, 894.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6863271737431087`*^9, 3.686327198744926*^9}, {
   3.686327275284863*^9, 3.686327293371063*^9}, {3.686327410390373*^9, 
   3.686327428818151*^9}, 
   3.686327583443411*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
kRxkkNvczP5rK14mS3v+7R+LcS6t\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"avedatar", "=", 
   RowBox[{"{", "}"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
   RowBox[{"i", "<=", "numsteps"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", " ", "=", " ", "1"}], ",", " ", 
     RowBox[{"j", " ", "<=", " ", "numobs"}], ",", " ", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"avedatar", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"i", "*", "stepsize"}], ",", "j", ",", 
          RowBox[{"Mean", "[", 
           RowBox[{"orgdatar", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j", ",", "0"}], "]"}], "]"}], "]"}]}], 
         "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6862827019773817`*^9, 3.686282718316231*^9}, {
   3.686282953279282*^9, 3.686282981652442*^9}, {3.6862830256294823`*^9, 
   3.686283058360765*^9}, {3.6862831365864573`*^9, 3.68628314217171*^9}, {
   3.686283324988316*^9, 3.6862833251787777`*^9}, {3.6862836400680304`*^9, 
   3.68628364097113*^9}, {3.6862841738006372`*^9, 3.6862841778355513`*^9}, {
   3.6862842794581413`*^9, 3.686284279581902*^9}, {3.6862843130975647`*^9, 
   3.68628432522399*^9}, {3.6862843879738903`*^9, 3.6862843888352613`*^9}, {
   3.6862844321900463`*^9, 3.686284432325036*^9}, {3.686284466984366*^9, 
   3.6862844671593227`*^9}, {3.686284592433177*^9, 3.6862846316124973`*^9}, {
   3.686284850352942*^9, 3.6862848842082443`*^9}, {3.68628629621349*^9, 
   3.686286297026495*^9}, {3.686288175542843*^9, 3.686288181250465*^9}, {
   3.6863255763770227`*^9, 3.686325627444846*^9}, {3.686325922504928*^9, 
   3.686325970881628*^9}, {3.686326233579832*^9, 3.686326275730336*^9}, 
   3.686327081173217*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NvS", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NvSr", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
   RowBox[{"i", "<=", "numsteps"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", " ", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"NvS", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"i", "*", "stepsize"}], ",", 
        RowBox[{"Mean", "[", 
         RowBox[{"Ndata", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "0"}], "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"NvSr", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"i", "*", "stepsize"}], ",", 
        RowBox[{"Mean", "[", 
         RowBox[{"Ndatar", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "0"}], "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
    ";"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6862827019773817`*^9, 3.686282718316231*^9}, {
   3.686282953279282*^9, 3.686282981652442*^9}, {3.6862830256294823`*^9, 
   3.686283058360765*^9}, {3.6862831365864573`*^9, 3.68628314217171*^9}, {
   3.686283324988316*^9, 3.6862833251787777`*^9}, {3.6862836400680304`*^9, 
   3.68628364097113*^9}, {3.6862841738006372`*^9, 3.6862841778355513`*^9}, {
   3.6862842794581413`*^9, 3.686284279581902*^9}, {3.6862843130975647`*^9, 
   3.68628432522399*^9}, {3.6862843879738903`*^9, 3.6862843888352613`*^9}, {
   3.6862844321900463`*^9, 3.686284432325036*^9}, {3.686284466984366*^9, 
   3.6862844671593227`*^9}, {3.686284592433177*^9, 3.6862846316124973`*^9}, {
   3.686284850352942*^9, 3.6862848842082443`*^9}, {3.68628629621349*^9, 
   3.686286297026495*^9}, {3.686288175542843*^9, 3.686288181250465*^9}, {
   3.6863255763770227`*^9, 3.686325627444846*^9}, {3.686325922504928*^9, 
   3.686325970881628*^9}, {3.686326233579832*^9, 3.686326275730336*^9}, 
   3.686327081173217*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.686283762463489*^9, 3.6862837634130087`*^9}, {
  3.686284137337566*^9, 3.686284150723608*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"NvS", ",", "NvSr"}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Size of Board\>\"", ",", "\"\<Score\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Reasoning agent\>\"", ",", " ", "\"\<Reactive agent\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.686325644308641*^9, 3.6863256568611307`*^9}, {
  3.686326064173407*^9, 3.6863261002728443`*^9}, {3.686326137397328*^9, 
  3.686326155529171*^9}, {3.68632618664748*^9, 3.686326190163163*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{5., 420.42857142857144`}, {10., 606.0147058823529}, {15., 
         540.8490566037735}, {20., 367.8333333333333}, {25., 
         113.26470588235294`}, {30., 90.5}, {
         35., -790.4444444444445}}]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 35.}, {-790.4444444444445, 606.0147058823529}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Size of Board\"", TraditionalForm], 
       FormBox["\"Score\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 35.}, {-790.4444444444445, 606.0147058823529}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Reasoning agent\"", "\"Reactive agent\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.686325682769031*^9, 3.686325702996599*^9}, 
   3.686325883608934*^9, 3.686325954377087*^9, 3.686326086895627*^9, 
   3.686326157215665*^9, 3.686326190837378*^9, 3.686326243566292*^9, 
   3.686326281651226*^9, 3.686326962287901*^9, 3.68632699703209*^9, 
   3.686327034127027*^9, {3.686327106180378*^9, 3.686327134689995*^9}, {
   3.686327174807434*^9, 3.686327199351596*^9}, 3.686327275624113*^9, 
   3.686327429822611*^9, 3.686327583720079*^9}]
}, Open  ]]
},
WindowSize->{1918, 1029},
WindowMargins->{{1, Automatic}, {1, Automatic}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 579, 14, 57, "Input"],
Cell[1162, 38, 1579, 23, 32, "Output"],
Cell[2744, 63, 1582, 23, 32, "Output"]
}, Open  ]],
Cell[4341, 89, 313, 7, 34, "Input"],
Cell[4657, 98, 460, 9, 34, "Input"],
Cell[CellGroupData[{
Cell[5142, 111, 493, 11, 57, "Input"],
Cell[5638, 124, 4153, 75, 490, "Output"],
Cell[9794, 201, 277, 6, 23, "Message"],
Cell[10074, 209, 275, 6, 23, "Message"],
Cell[10352, 217, 1579, 25, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11968, 247, 650, 10, 77, "Input"],
Cell[12621, 259, 1358, 19, 32, "Output"],
Cell[13982, 280, 1356, 19, 32, "Output"],
Cell[15341, 301, 1357, 19, 32, "Output"]
}, Open  ]],
Cell[16713, 323, 145, 2, 32, "Input"],
Cell[16861, 327, 1714, 40, 125, "Input"],
Cell[18578, 369, 6665, 153, 373, "Input"],
Cell[25246, 524, 92, 1, 32, "Input"],
Cell[25341, 527, 667, 9, 77, "Input"],
Cell[26011, 538, 2046, 40, 147, "Input"],
Cell[CellGroupData[{
Cell[28082, 582, 506, 12, 34, "Input"],
Cell[28591, 596, 43456, 725, 205, 5601, 103, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[72062, 1324, 93, 3, 34, "Input"],
Cell[72158, 1329, 1839, 36, 124, "Input"],
Cell[74000, 1367, 200, 6, 57, "Input"],
Cell[74203, 1375, 1891, 40, 102, "Input"],
Cell[76097, 1417, 143, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[76265, 1423, 636, 14, 34, "Input"],
Cell[76904, 1439, 12134, 246, 192, "Output"]
}, Open  ]]
}
]
*)

